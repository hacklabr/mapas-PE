version: '3'
services:
  nginx:
    image: nginx:latest
    restart: unless-stopped
    volumes:
     - /dev/null:/var/www/html/index.php

     - ./docker-data/public-files:/var/www/html/files
     - ./docker-data/assets:/var/www/html/assets

     - ./compose/production/nginx.conf:/etc/nginx/conf.d/default.conf
     - ./docker-data/certbot/conf:/etc/letsencrypt
     - ./docker-data/certbot/www:/var/www/certbot
    ports:
     - "80:80"
     - "443:443"
    depends_on:
      - mapasculturais
    links:
      - mapasculturais

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./docker-data/certbot/conf:/etc/letsencrypt
      - ./docker-data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  mapasculturais:
    env_file:
      - .env
    build:
      context: ./
      dockerfile: compose/production/Dockerfile
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - ./docker-data/assets:/var/www/html/assets
      - ./docker-data/public-files:/var/www/html/files
      - ./docker-data/private-files:/var/www/private-files
      - ./docker-data/saas-files:/var/www/SaaS
      - ./compose/teste.php:/var/www/html/teste.php

    links:
      - db
      - redis
    environment:
      - LOG_LEVEL=DEBUG
      - LOG_ENABLED=true
      
      - APP_MODE=production
      - APP_LCODE=pt_BR
      
      - REDIS_CACHE=redis
      - SESSIONS_SAVE_PATH=tcp://redis:6379
      - PENDING_PCACHE_RECREATION_INTERVAL=2

      - DB_PASSWORD=mapas
      - DB_USER=mapas
      - DB_DB=mapas
      - DB_VERSION
    depends_on:
      - db
      - redis

  redis:
    image: redis:6
    command: --maxmemory 256Mb --maxmemory-policy allkeys-lru
    
      
  db:
    image: postgis/postgis:14-master
    restart: always
    environment:
      - POSTGRES_PASSWORD=mapas
      - POSTGRES_USER=mapas
      - POSTGRES_DB=mapas
#    ports:
#      - "5432:5432"
    volumes:
      - ./compose/db:/docker-entrypoint-initdb.d
      - ./docker-data/db-data:/var/lib/postgresql/data

  metabase:
    image: metabase/metabase
    environment:
      - MB_DB_TYPE=postgres 
      - MB_DB_DBNAME=metabase 
      - MB_DB_PORT=5432 
      - MB_DB_USER=metabase 
      - MB_DB_PASS=metabase 
      - MB_DB_HOST=db_metabase 
    ports:
      - "3000:3000"
    volumes:
      - ../docker-data/metabase:/metabase-data
    depends_on:
      - db_metabase
      
  db_metabase:
    image: postgres:14
    environment:
      - POSTGRES_PASSWORD=metabase
      - POSTGRES_USER=metabase
      - POSTGRES_DB=metabase
    volumes:
      - ../compose/metabase.sql.gz:/docker-entrypoint-initdb.d/dump.sql.gz
      - ../docker-data/metabase-data:/var/lib/postgresql/data
